---
import Layout from "@layouts/Layout.astro";
import { data } from "alpinejs";
import { getCollection, render } from "astro:content";
import { formatDate } from "src/helpers";
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const personnes = await getCollection("personnes");
  return personnes.map((personne) => ({
    params: { id: personne.id },
    props: { personne },
  }));
}
// 2. For your template, you can get the entry directly from the prop
const { personne } = Astro.props;
const { Content } = await render(personne);

// const profession = personne.data.profession && [...new Set(personne.data.profession)],
---

<Layout pageTitle={`Fiche de ${personne.data.prenom} ${personne.data.nom}`}>
    <h1 class="font-bold text-lg">{personne.data.prenom} {personne.data.nom}</h1>
    <p>Nationalité : {personne.data.nationalite}</p>
    <p>Date de naissance : {(formatDate(personne.data.dateNaissance))}</p>
    {personne.data.dateDeces && <p>Date de décès : {(formatDate(personne.data.dateDeces))}</p>}
    <p>Lieu de naissance : {personne.data.lieuNaissance}</p>
    {personne.data.lieuDeces && <p>Lieu de décès : {personne.data.lieuDeces}</p>}
    {personne.data.profession && <p>Profession{personne.data.profession.length > 1 && <>s</>} : {personne.data.profession.join(", ").replace(/, ([^,]*)$/, ' et $1')}</p>}

    <div class="prose prose-lg">
        <Content />
    </div>
</Layout>
