---
import LinkFilm from "@components/LinkFilm.astro";
import ListeLinkfilm from "@components/ListeLinkfilm.astro";
import Layout from "@layouts/Layout.astro";
import { data } from "alpinejs";
import { getCollection, render } from "astro:content";
import { formatDate } from "src/helpers";
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const personnes = await getCollection("personnes");
  return personnes.map((personne) => ({
    params: { id: personne.id },
    props: { personne },
  }));
}
// 2. For your template, you can get the entry directly from the prop
const { personne } = Astro.props;
const { Content } = await render(personne);

// const profession = personne.data.profession && [...new Set(personne.data.profession)],

const filmsRealises = [...(await getCollection("films"))].filter(
  (film) => film.data.réalisateur?.id === personne.id
);
---

<Layout pageTitle={`Fiche de ${personne.data.prenom} ${personne.data.nom}`}>
  <div class="max-w-4xl mx-auto p-4">
    <h1 class="font-bold text-3xl mb-4">{personne.data.prenom} {personne.data.nom}</h1>
    <p class="text-gray-700 mb-2">Nationalité : {personne.data.nationalite}</p>
    <p class="text-gray-700 mb-2">Date de naissance : {formatDate(personne.data.dateNaissance)}</p>
    {personne.data.dateDeces && <p class="text-gray-700 mb-2">Date de décès : {formatDate(personne.data.dateDeces)}</p>}
    <p class="text-gray-700 mb-2">Lieu de naissance : {personne.data.lieuNaissance}</p>
    {personne.data.lieuDeces && <p class="text-gray-700 mb-2">Lieu de décès : {personne.data.lieuDeces}</p>}
    {personne.data.profession && <p class="text-gray-700 mb-2">Profession{personne.data.profession.length > 1 && <>s</>} : {personne.data.profession.join(", ").replace(/, ([^,]*)$/, ' et $1')}</p>}

    <div class="prose prose-lg mt-6">
      <Content />
    </div>
  </div>
</Layout>
