---
import LinkPersonne from "@components/LinkPersonne.astro";
import Layout from "@layouts/Layout.astro";
import { data } from "alpinejs";
import { getEntries } from "astro:content";
import { getEntry } from "astro:content";
import { getCollection, render } from "astro:content";
import { formatDate } from "src/helpers";
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const films = await getCollection("films");
  return films.map((film) => ({
    params: { id: film.id },
    props: { film },
  }));
}

// 2. For your template, you can get the entry directly from the prop
const { film } = Astro.props;
const { Content } = await render(film);

// const profession = film.data.profession && [...new Set(film.data.profession)],

const realisateur =
  film.data.réalisateur && (await getEntry(film.data.réalisateur));
const scenariste =
  film.data.scénariste && (await getEntries(film.data.scénariste));

const roles =
  film.data.roles &&
  (await Promise.all(
    film.data.roles.map(async (r) => ({
      role: r.role,
      acteur: await getEntry(r.acteur),
    }))
  ));
---

<Layout pageTitle={`Fiche du Film ${film.data.titre} `}>
  <div class="max-w-4xl mx-auto p-4">
    <div class="bg-white shadow-md rounded-lg p-6 mb-6">
      <h1 class="font-bold text-2xl mb-4">{film.data.titre}</h1>
      <p class="text-gray-700 mb-2">Date de sortie : {formatDate(film.data.dateSortie)}</p>
      <p class="text-gray-700 mb-2">Durée : {film.data.duree}</p>
      <p class="text-gray-700 mb-2">Langue : {film.data.langue}</p>
      <p class="text-gray-700 mb-4">Synopsis : {film.data.synopsis}</p>
      {
        realisateur && (
          <p class="text-gray-700 mb-2">
            Réalisé par : <LinkPersonne personne={realisateur}/>
          </p>
        )
      }
      {
        scenariste && (
          <p class="text-gray-700 mb-4">
            Scénario de :{" "}
            {scenariste
              .map((s) => <LinkPersonne personne={s} />)
              .reduce((prev, curr) => [prev, ", ", curr])
            }
          </p>
        )
      }
      { roles.length && (
        <div class="bg-gray-100 p-4 rounded-lg">
          <h2 class="font-bold text-xl mb-4">Acteurs</h2>
          <ul class="list-disc list-inside">
            {
              roles.map((r) => (
                <li class="text-gray-700 mb-2">
                  <strong>{r.role}</strong> : Joué par <LinkPersonne personne={r.acteur}/>
                </li>
              ))
            }
          </ul>
        </div>
      )}
    </div>
    <div class="prose prose-lg">
      <Content />
    </div>
  </div>
</Layout>
